class Board {
    // 0: пустая клетка, 1: нолик, 2: крестик
    field Array boardArray;
    // Количество пустых клеток
    field int emptyCellsCount;
    // Состояние поля
    field int winVariable; // 0 - ряд, 1-столбик, 2 - верхняя диаг, 3 - нижняя диагональ
    field boolean isPlayerWin;
    field boolean isDraw;
    field int winRow,winCol; // по каким рядам/столбцам победа
    // параметры
    field int boardX, boardY, boardSize, thickness, cellSize, finishLineThickness;



    constructor Board new(int x,int y) {
        let boardArray = Array.new(9);	
		let boardX = x;
		let boardY = y;
		let boardSize = 120;
		let thickness = 4;
		let finishLineThickness = 4;
		let cellSize = boardSize/3;
		do clear();
		do drawBoard();
		return this;
	}

    method void drawWin() {
		if(winVariable=0) {
			do rowWin(winRow);
		}
		if(winVariable=1) {
			do colWin(winCol);
		}
		if(winVariable=2) {
			do topDiagonalWin();
		}
		if(winVariable =3) {
			do botDiagonalWin();
		}
		return;
	}

    method boolean isWin() {
		return isPlayerWin;
	}
	
	method boolean isDraw() {
		return isDraw;
	}

    method int getEmptyCellsCount() {
		return emptyCellsCount;
	}


    //чистим ресурсики (доску, память)
    method void dispose() {
        do Screen.setColor(false);
		do Screen.drawRectangle(boardX,boardY,boardX+boardSize, boardY+boardSize);
		do Screen.setColor(true);
		do Memory.deAlloc(boardArray);
		return;
	}

    //а тут просто очищаем доску
    method void clear() {
		var int i;
		let emptyCellsCount = 9;
		while(i < 9) {
			let boardArray[i] = 0;
			let i = i + 1;
		}
		return;
	}


    function void main() {
<<<<<<< HEAD
        do Screen.clearScreen();
        do drawBoard();         // Отрисовка игрового поля
=======
        // Очистка экрана
        do Screen.clearScreen(); 
        // Отрисовка игрового поля
        do drawBoard();         
>>>>>>> f7e094d8a60350b14faf019bd69b1f216b8ba9f8
        return;
    }


    method void drawBoard() {
        // Рисование вертикальных линий
        do Screen.drawLine(170, 0, 170, 255);
        do Screen.drawLine(340, 0, 340, 255);

        // Рисование горизонтальных линий
        do Screen.drawLine(0, 85, 511, 85);
        do Screen.drawLine(0, 170, 511, 170);
        return;
    }


    method void rowWin(int row){
        return;
    }


    method void colWin(int col){
        return;
    }

    method void topDiagonalWin(){
        return;
    }

    method void botDiagonalWin(){
        return;
    }
}