class Game {
    static Board board;
    static Mark naught, cross;

    function void initialize() {
        let naught = Mark.new(1);
        let cross = Mark.new(1);

        return;
    }

    function void startGame() {
        var int currentPlayer;
        var int currentPiece;
        var int gameStatus;
        var boolean isGameOver;

        do Utils.showMessage("Press enter to start");

        // TODO: Prompt? for first player (user or computer)
        // 0 - user, 1 - computer
        let currentPlayer = 0;
        let currentPiece = cross;
        let isGameOver = false;

        while (~isGameOver) {
            let gameStatus = Game.play(currentPlayer, currentPiece);

            if (gameStatus = 0) {
				let isGameOver = true;
            }

            if (gameStatus = 1) {
                let currentPlayer = Game.getOtherPlayer(currentPlayer);
                let currentPiece = Game.getOtherMark(currentPiece);
            }

            if (gameStatus = 2) {
                do Utils.showMessage("Game drawn, enter to restart");
                let isGameOver = true;
            }

            if(gameStatus = 3) {
                if (currentPlayer = 0) {
                    // Won't happen with smart computer
                    // FIX: add difficulty levels

                    do Utils.showMessage("You win, enter to restart");
                } else {
                    do Utils.showMessage("You lost, enter to restart");
                }

                let isGameOver = true;
            }

            do board.dispose();
        }

        return;
    }

    function int play(int player, Mark mark) {
        var boolean isInputValid;
        var int input;
        var Array playerMove;
        var Array computerMove;

        let isInputValid = false;

        if (player = 0) {
            while (~isInputValid) {
                let input = Utils.processInput("Enter (1-9) for move or 0 to restart: ");

                if (input = 0) {
                    return 0;
                }
                
                let playerMove = board.indexToPosition(input);
                let isInputValid = board.isFree(playerMove[0], playerMove[1]);
                
            }
            do board.makeMove(playerMove[0], playerMove[1], mark);
            do board.drawMove(playerMove[0], playerMove[1], mark);
            do playerMove.dispose();
        } else {
            // TODO: getComputerMove
            let computerMove = Game.getComputerMove(mark);

			do board.makeMove(computerMove[0],computerMove[1], mark);
			do board.drawMove(computerMove[0],computerMove[1], mark);
            do computerMove.dispose();
        }
        
        return Game.evaluateBoard();
    }

    function int getOtherPlayer(int player) {
        if (player = 0) {
            return 1;
        }
        return 0;
    }

    function Mark getOtherMark(Mark mark) {
        if (mark = naught) {
            return cross;
        }
        return naught;
    }

    function int evaluateBoard() {
        if (board.isWin()) {
            return 3;
        }
        if (board.isDraw()) {
			return 2;
		}
        return 1;
    }
}