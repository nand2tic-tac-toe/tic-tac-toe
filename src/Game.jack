class Game {
    static Board board;
    static Mark naught, cross;
    static int statistics;

    function void initialize() {
        let naught = Mark.new(1);
        let cross = Mark.new(1);

        return;
    }

    function void resetStatistics() {
        let statistics = 0;
		return;
	}

    function void startGame() {
        var int currentPlayer, currentPiece;
        var int gameStatus;
        var boolean isGameOver;

        do Utils.showMessage("Press enter to start");

        // TODO: Prompt? for first player (user or computer)
        // 0 - user, 1 - computer
        let currentPlayer = 0;
        let currentPiece = cross;
        let isGameOver = false;

        while (~isGameOver) {
            let gameStatus = Game.play(currentPlayer, currentPiece);

            if (gameStatus = 0) {
				let isGameOver = true;
            }

            if (gameStatus = 1) {
                let currentPlayer = Game.getOtherPlayer(currentPlayer);
                let currentPiece = Game.getOtherMark(currentPiece);
            }

            if (gameStatus = 2) {
                do Utils.showMessage("Game drawn, enter to restart");
                let isGameOver = true;
            }

            if(gameStatus = 3) {
                if (currentPlayer = 0) {
                    // Won't happen with smart computer
                    // FIX: add difficulty levels

                    do Utils.showMessage("You win, enter to restart");
                } else {
                    do Utils.showMessage("You lost, enter to restart");
                }

                let isGameOver = true;
            }

            do board.dispose();
        }

        return;
    }

    function int play(int player, Mark mark) {
        var boolean isInputValid;
        var int input;
        var Array playerMove;
        var Array computerMove;

        let isInputValid = false;

        if (player = 0) {
            while (~isInputValid) {
                let input = Utils.processInput("Enter (1-9) for move or 0 to restart: ");

                if (input = 0) {
                    return 0;
                }
                
                let playerMove = board.indexToPosition(input);
                let isInputValid = board.isFree(playerMove[0], playerMove[1]);
                
            }
            do board.makeMove(playerMove[0], playerMove[1], mark);
            do board.drawMove(playerMove[0], playerMove[1], mark);
            do playerMove.dispose();
        } else {
            let computerMove = Game.getComputerMove(mark);

			do board.makeMove(computerMove[0], computerMove[1], mark);
			do board.drawMove(computerMove[0], computerMove[1], mark);
            do computerMove.dispose();
        }
        
        return Game.evaluateBoard();
    }

    function int getOtherPlayer(int player) {
        if (player = 0) {
            return 1;
        }
        return 0;
    }

    function Mark getOtherMark(Mark mark) {
        if (mark = naught) {
            return cross;
        }
        return naught;
    }

    function int evaluateBoard() {
        if (board.isWin()) {
            return 3;
        }
        if (board.isDraw()) {
			return 2;
		}
        return 1;
    }

    function Array getComputerMove(Mark mark) {
		var Array moves;
		var Array movesWithScore;

		do Game.resetStatistics();
		let moves = Array.new(2);

		if (board.getEmptyCellsCount() = 9) {
			return Game.getRandomFirstMove();
		} else {
			let movesWithScore = Game.getBestMove(mark);
			let moves[0] = movesWithScore[1];
			let moves[1] = movesWithScore[2];

			do movesWithScore.dispose();

			return moves;
		}
	}

    function Array inputToMove(int input) {
		var Array moves;
		let moves = Array.new(2);
		let moves[0] = (input - 1) / 3 ; 
		let moves[1] = (input - 1) - (3 * moves[0]);
		return moves;
		
	}

    function Array getRandomMove() {
    var int randomValue; 
    var Array possibleMove; 

    while (true) {
        let randomValue = Random.randRange(4);
        // Преобразуем число в допустимый индекс хода (1, 3, 5, 7)
        let randomValue = (randomValue * 2) + 1;
        let possibleMove = Game.inputToMove(randomValue);

        if (board.isFree(possibleMove[0], possibleMove[1])) {
            return possibleMove; 
        }
    }
    
    return possibleMove; // фейковый костыль
    }

    function Array getBestMove(Mark p) {
		var int i,moveCount, currentScore,nextScore;
		var Array moveList, bestMove;

		let i = 0;
		let currentScore = -10;     
		
		let bestMove=Array.new(3);
		let moveCount = board.getEmptyCellsCount();
		let moveList = board.getMoves();
		while(i< moveCount) {
			do Game.incStat();
			do board.makeMove(moveList[i+i],moveList[i+i+1],p);
			let nextScore = Game.getMoveScore(p);
			if(nextScore>currentScore) {
				let currentScore = nextScore;
				let bestMove[0] = currentScore;
				let bestMove[1] = moveList[i+i];
				let bestMove[2] = moveList[i+i+1];
			}
			do board.takeBackMove(moveList[i+i],moveList[i+i+1]);
			let i = i+1;
		}
		do moveList.dispose();
		return bestMove;
	}

    //todo
    function void incStat(){
        return;
    }

    function int getMoveScore(Mark p) {
		var Array otherMove;
		var int otherScore;
		do board.evaluateWin();
		if(board.isDraw()) {
			return 0;
		}
		if(board.isWin()) {
			return 1;
		}
		let otherMove= Game.getBestMove(Game.getOtherMark(p));
		let otherScore = otherMove[0];
		do otherMove.dispose();
		return -otherScore;		
	}

    // Быстро получаем случайный первый ход компьютера
    function Array getRandomFirstMove() {
        var int move;
		var Array moves;
        
		while (true) {
			let move = Random.randRange(4);
			let move = (move * 2) + 1;
			let moves = Game.inputToMove(move);

			if (board.isFree(moves[0], moves[1])) {
				return moves;
			}
		}
		return moves;
    }

    function void getGameSeed() {
        var int count;
        var boolean isEnterPressed;

        let isEnterPressed = false;
        let count = 1;

        while (~isEnterPressed) {
            if (Keyboard.keyPressed() = 128) {
				let isEnterPressed = true;
			}

			let count = count + 1;

			if(count > 20251) {
				let count = 1;
			}
        }

        do Random.setSeed(count);
        return;
    }
}